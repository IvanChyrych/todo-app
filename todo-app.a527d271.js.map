{"mappings":"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","sources":["<anon>","src/js/app.js","src/js/localStorage.js"],"sourcesContent":["function $f3e1fb6edc6593d2$export$2acc14246b6aac9e(data) {\n    localStorage.setItem('todoItem', JSON.stringify(data));\n}\nfunction $f3e1fb6edc6593d2$export$408171784a564cae() {\n    const data = localStorage.getItem('todoItem');\n    if (data) {\n        const dataFromStorage = JSON.parse(data);\n        return dataFromStorage.map((todo)=>{\n            return todo;\n        });\n    } else return [];\n}\n\n\nconst $388b617130f03bd4$var$saveTodoButtonElement = document.querySelector('#save-todo-button');\nconst $388b617130f03bd4$var$titleTodoElement = document.querySelector('#title');\nconst $388b617130f03bd4$var$discriptionTodoElement = document.querySelector('#discription');\nconst $388b617130f03bd4$var$columnElement = document.querySelector('#column');\nconst $388b617130f03bd4$var$trelloCardsElement = document.querySelector('.trello__cards');\nconst $388b617130f03bd4$var$editSaveTodoButton = document.querySelector('#edit-save-todo-button');\nconst $388b617130f03bd4$var$handleDeleteAllCardButton = document.querySelector('#trello__button-delete-all');\nconst $388b617130f03bd4$var$todoCounterElement = document.querySelector('.trello__todo-counter');\nconst $388b617130f03bd4$var$inprogressCounterElement = document.querySelector('.trello__inprogress-counter');\nconst $388b617130f03bd4$var$doneCounterElement = document.querySelector('.trello__done-counter');\nconst $388b617130f03bd4$var$hoursTimeElement = document.querySelector('.trello__clock-hours');\nconst $388b617130f03bd4$var$minutesTimeElement = document.querySelector('.trello__clock-minutes');\nconst $388b617130f03bd4$var$selectUserElement = document.querySelector('.select__user');\nconst $388b617130f03bd4$var$selectUserEditElement = document.querySelector('.select__user-edit');\nlet $388b617130f03bd4$var$usersList = [];\nconst $388b617130f03bd4$var$data = (0, $f3e1fb6edc6593d2$export$408171784a564cae)();\n$388b617130f03bd4$var$render($388b617130f03bd4$var$data);\nlet $388b617130f03bd4$var$currentEditId = null;\n$388b617130f03bd4$var$saveTodoButtonElement.addEventListener('click', $388b617130f03bd4$var$handleSubmitForm);\n$388b617130f03bd4$var$trelloCardsElement.addEventListener('click', $388b617130f03bd4$var$handleRemoveCard);\n$388b617130f03bd4$var$trelloCardsElement.addEventListener('click', $388b617130f03bd4$var$handleEditCard);\n$388b617130f03bd4$var$editSaveTodoButton.addEventListener('click', $388b617130f03bd4$var$handleSaveEditedCard);\n$388b617130f03bd4$var$handleDeleteAllCardButton.addEventListener('click', $388b617130f03bd4$var$handleDeleteAllCard);\nclass $388b617130f03bd4$var$Todo {\n    constructor(id, column, title, discription, userId){\n        this.id = id;\n        this.title = title;\n        this.discription = discription;\n        this.column = column;\n        this.createdAt = new Date();\n        this.user = userId;\n    }\n}\nfetch('https://jsonplaceholder.typicode.com/users').then((response)=>response.json()).then((users)=>{\n    $388b617130f03bd4$var$renderUsers(users);\n});\nfunction $388b617130f03bd4$var$buildTemplateUsers({ id: id, name: name }) {\n    return `\n    <option value=\"${id}\">${name}</option>\n    `;\n}\nfunction $388b617130f03bd4$var$renderUsers(users) {\n    $388b617130f03bd4$var$usersList = users;\n    let html = '';\n    users.forEach((users)=>{\n        const template = $388b617130f03bd4$var$buildTemplateUsers(users);\n        html += template;\n    });\n    $388b617130f03bd4$var$selectUserElement.insertAdjacentHTML('beforeend', html);\n    $388b617130f03bd4$var$selectUserEditElement.insertAdjacentHTML('beforeend', html);\n}\nfunction $388b617130f03bd4$var$updateCounter() {\n    let todoCount = 0;\n    let inprogressCount = 0;\n    let doneCount = 0;\n    $388b617130f03bd4$var$data.forEach((todo)=>{\n        if (todo.column == 'todo') todoCount += 1;\n        if (todo.column == 'in-progress') inprogressCount += 1;\n        if (todo.column == 'done') doneCount += 1;\n    });\n    $388b617130f03bd4$var$todoCounterElement.textContent = todoCount;\n    $388b617130f03bd4$var$inprogressCounterElement.textContent = inprogressCount;\n    $388b617130f03bd4$var$doneCounterElement.textContent = doneCount;\n}\nfunction $388b617130f03bd4$var$handleSubmitForm() {\n    const id = Date.now();\n    const column = $388b617130f03bd4$var$columnElement.value;\n    const title = $388b617130f03bd4$var$titleTodoElement.value;\n    const discription = $388b617130f03bd4$var$discriptionTodoElement.value;\n    const userId = $388b617130f03bd4$var$selectUserElement.value;\n    const newTodo = new $388b617130f03bd4$var$Todo(id, column, title, discription, userId);\n    if (column === 'in-progress') {\n        const inProgressTask = $388b617130f03bd4$var$data.filter((todo)=>todo.column === 'in-progress');\n        if (inProgressTask.length >= 6) {\n            alert('too much tasks!');\n            return;\n        }\n    }\n    $388b617130f03bd4$var$data.push(newTodo);\n    (0, $f3e1fb6edc6593d2$export$2acc14246b6aac9e)($388b617130f03bd4$var$data);\n    $388b617130f03bd4$var$render($388b617130f03bd4$var$data);\n}\nfunction $388b617130f03bd4$var$handleRemoveCard({ target: target }) {\n    const { role: role } = target.dataset;\n    if (role !== 'remove') return;\n    const rootElement = target.closest('.card');\n    const { id: id } = rootElement.dataset;\n    const index = $388b617130f03bd4$var$data.findIndex((todo)=>todo.id == id);\n    $388b617130f03bd4$var$data.splice(index, 1);\n    (0, $f3e1fb6edc6593d2$export$2acc14246b6aac9e)($388b617130f03bd4$var$data);\n    $388b617130f03bd4$var$render($388b617130f03bd4$var$data);\n}\nfunction $388b617130f03bd4$var$handleDeleteAllCard() {\n    const confirmDeleteAll = confirm('Delete all cards?');\n    if (confirmDeleteAll) {\n        const notDoneItems = $388b617130f03bd4$var$data.filter((todo)=>todo.column !== 'done');\n        $388b617130f03bd4$var$data.length = 0;\n        notDoneItems.forEach((todo)=>$388b617130f03bd4$var$data.push(todo));\n        (0, $f3e1fb6edc6593d2$export$2acc14246b6aac9e)($388b617130f03bd4$var$data);\n        $388b617130f03bd4$var$render($388b617130f03bd4$var$data);\n    }\n}\nfunction $388b617130f03bd4$var$handleEditCard({ target: target }) {\n    if (target.dataset.role !== 'edit') return;\n    const parentElement = target.closest('.card');\n    const id = parentElement.dataset.id;\n    const todo = $388b617130f03bd4$var$data.find((todo)=>todo.id == id);\n    $388b617130f03bd4$var$currentEditId = id;\n    document.querySelector('#edit-title').value = todo.title;\n    document.querySelector('#edit-discription').value = todo.discription;\n    document.querySelector('#edit-column').value = todo.column;\n    document.querySelector('.select__user-edit').value = todo.user;\n    const modal = new bootstrap.Modal(document.getElementById('editModal'));\n    modal.show();\n}\nfunction $388b617130f03bd4$var$handleSaveEditedCard() {\n    const title = document.querySelector('#edit-title').value;\n    const discription = document.querySelector('#edit-discription').value;\n    const column = document.querySelector('#edit-column').value;\n    const userId = document.querySelector('.select__user-edit').value;\n    const index = $388b617130f03bd4$var$data.findIndex((todo)=>todo.id == $388b617130f03bd4$var$currentEditId);\n    if (index === -1) {\n        alert(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u0437\\u0430\\u0434\\u0430\\u0447\\u0430 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0430!\");\n        return;\n    }\n    $388b617130f03bd4$var$data[index].title = title;\n    $388b617130f03bd4$var$data[index].discription = discription;\n    $388b617130f03bd4$var$data[index].column = column;\n    $388b617130f03bd4$var$data[index].user = userId;\n    (0, $f3e1fb6edc6593d2$export$2acc14246b6aac9e)($388b617130f03bd4$var$data);\n    $388b617130f03bd4$var$render($388b617130f03bd4$var$data);\n    $388b617130f03bd4$var$currentEditId = null;\n}\nfunction $388b617130f03bd4$var$buildTemplate({ id: id, title: title, discription: discription, createdAt: createdAt, user: user }) {\n    const date = new Date(createdAt);\n    const userObj = $388b617130f03bd4$var$usersList.find((u)=>u.id == user);\n    const userName = userObj ? userObj.name : 'unknown user';\n    return `\n        <div  data-id=\"${id}\" class=\"card m-2 w-90\" style=\"max-width:400px;\">\n        <button data-role=\"remove\" class=\"btn btn-close\"></button>\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">${title}</h5>\n                <p class=\"card-text\">${discription}</p>\n                <p class=\"card-text\">${userName}</p>\n                <div class=\"card__time d-flex\">\n                    <div class=\"card__time-day d-flex p-2\">\n                        <div class=\"card-createdAt\">${date.getFullYear()}</div>\n                        <div class=\"card-createdAt\">.</div>\n                        <div class=\"card-createdAt\">${date.getMonth()}</div>\n                        <div class=\"card-createdAt\">.</div>\n                        <div class=\"card-createdAt\">${date.getDay()}</div>\n                    </div>\n                    <div class=\"card__time-hours d-flex p-2\">\n                        <div class=\"card-createdAt\">${date.getHours().toString().padStart(2, '0')}</div>\n                        <div class=\"card-createdAt\">:</div>\n                        <div class=\"card-createdAt\">${date.getMinutes().toString().padStart(2, '0')}</div>\n                    </div>\n                </div>\n            </div>\n        <button data-role=\"edit\" class=\"btn btn-warning\">edit</button>\n        </div>\n    `;\n}\nfunction $388b617130f03bd4$var$currentTime() {\n    const time = new Date();\n    let hours = time.getHours().toString().padStart(2, '0');\n    let minutes = time.getMinutes().toString().padStart(2, '0');\n    $388b617130f03bd4$var$hoursTimeElement.textContent = `${hours}`;\n    $388b617130f03bd4$var$minutesTimeElement.textContent = `${minutes}`;\n}\nsetInterval($388b617130f03bd4$var$currentTime, 100);\nfunction $388b617130f03bd4$var$render(data) {\n    document.querySelector('.trello__todo-container').innerHTML = '';\n    document.querySelector('.trello__inprogress-container').innerHTML = '';\n    document.querySelector('.trello__done-container').innerHTML = '';\n    data.forEach((todo)=>{\n        let containerSelector = '';\n        if (todo.column === 'todo') containerSelector = '.trello__todo-container';\n        else if (todo.column === 'in-progress') containerSelector = '.trello__inprogress-container';\n        else if (todo.column === 'done') containerSelector = '.trello__done-container';\n        const container = document.querySelector(containerSelector);\n        const template = $388b617130f03bd4$var$buildTemplate(todo);\n        container.insertAdjacentHTML('beforeend', template);\n    });\n    $388b617130f03bd4$var$updateCounter();\n}\n\n\n//# sourceMappingURL=todo-app.a527d271.js.map\n","import { getDataFromLocalStorage, setDataToLocalStorage } from './localStorage.js'\r\n\r\nconst saveTodoButtonElement=document.querySelector('#save-todo-button')\r\nconst titleTodoElement=document.querySelector('#title')\r\nconst discriptionTodoElement=document.querySelector('#discription')\r\nconst columnElement=document.querySelector('#column')\r\nconst trelloCardsElement=document.querySelector('.trello__cards')\r\nconst editSaveTodoButton=document.querySelector('#edit-save-todo-button')\r\nconst handleDeleteAllCardButton = document.querySelector('#trello__button-delete-all')\r\nconst todoCounterElement=document.querySelector('.trello__todo-counter')\r\nconst inprogressCounterElement=document.querySelector('.trello__inprogress-counter')\r\nconst doneCounterElement=document.querySelector('.trello__done-counter')\r\nconst hoursTimeElement=document.querySelector('.trello__clock-hours')\r\nconst minutesTimeElement=document.querySelector('.trello__clock-minutes')\r\nconst selectUserElement=document.querySelector('.select__user')\r\nconst selectUserEditElement=document.querySelector('.select__user-edit')\r\n\r\nlet usersList=[]\r\n\r\nconst data=getDataFromLocalStorage()\r\nrender(data)\r\n\r\nlet currentEditId=null\r\n\r\nsaveTodoButtonElement.addEventListener('click', handleSubmitForm)\r\ntrelloCardsElement.addEventListener('click',handleRemoveCard)\r\ntrelloCardsElement.addEventListener('click', handleEditCard)\r\neditSaveTodoButton.addEventListener('click',handleSaveEditedCard)\r\nhandleDeleteAllCardButton.addEventListener('click', handleDeleteAllCard)\r\n\r\nclass Todo {\r\n    constructor(id,column,title,discription,userId) {\r\n        this.id=id\r\n        this.title=title\r\n        this.discription=discription\r\n        this.column=column\r\n        this.createdAt=new Date()\r\n        this.user=userId\r\n    }\r\n}\r\n\r\nfetch('https://jsonplaceholder.typicode.com/users')\r\n.then((response)=>response.json())\r\n.then((users)=>{renderUsers(users)\r\n})\r\n\r\nfunction buildTemplateUsers({id,name}) {\r\n    return `\r\n    <option value=\"${id}\">${name}</option>\r\n    `\r\n}\r\n\r\nfunction renderUsers(users) {\r\n    usersList=users\r\n    let html=''\r\n\r\n    users.forEach((users)=>{\r\n        const template=buildTemplateUsers(users)\r\n        html+=template\r\n    })\r\n    selectUserElement.insertAdjacentHTML('beforeend',html)\r\n    selectUserEditElement.insertAdjacentHTML('beforeend',html)\r\n}\r\n\r\nfunction updateCounter() {\r\n    let todoCount=0\r\n    let inprogressCount=0\r\n    let doneCount=0\r\n    data.forEach((todo)=>{\r\n        if (todo.column=='todo') {\r\n            todoCount+=1\r\n        }\r\n        if (todo.column=='in-progress') {\r\n            inprogressCount+=1\r\n        }\r\n        if (todo.column=='done') {\r\n            doneCount+=1\r\n        }\r\n    })\r\n    todoCounterElement.textContent=todoCount\r\n    inprogressCounterElement.textContent=inprogressCount\r\n    doneCounterElement.textContent=doneCount\r\n}\r\n\r\nfunction handleSubmitForm() {\r\n    const id=Date.now()\r\n    const column=columnElement.value\r\n    const title=titleTodoElement.value\r\n    const discription = discriptionTodoElement.value \r\n    const userId=selectUserElement.value\r\n\r\n    const newTodo=new Todo(id,column,title,discription,userId)\r\n\r\nif (column==='in-progress') {\r\n    const inProgressTask=data.filter((todo)=>todo.column==='in-progress')\r\n    if (inProgressTask.length>=6) {\r\n        alert('too much tasks!')\r\n        return\r\n    }\r\n}\r\n\r\n    data.push(newTodo)\r\n    setDataToLocalStorage(data)\r\n    render(data)\r\n}\r\n\r\nfunction handleRemoveCard({target}) {\r\n    const {role}=target.dataset\r\n    if (role!=='remove') {\r\n        return\r\n    }\r\n    const rootElement=target.closest('.card')\r\n    const {id}=rootElement.dataset\r\n    const index=data.findIndex((todo)=>todo.id==id)\r\n    data.splice(index,1)\r\n    setDataToLocalStorage(data)\r\n    render(data)\r\n}\r\n\r\nfunction handleDeleteAllCard() {\r\n    const confirmDeleteAll=confirm('Delete all cards?') \r\n\r\n    if (confirmDeleteAll) {\r\n    const notDoneItems=data.filter(todo => todo.column!=='done');\r\n    data.length=0\r\n    notDoneItems.forEach((todo)=>data.push(todo))\r\n    setDataToLocalStorage(data)\r\n    render(data)\r\n    } \r\n}\r\n\r\nfunction handleEditCard({target}) {\r\nif (target.dataset.role!=='edit') {\r\n    return   \r\n}\r\nconst parentElement=target.closest('.card')\r\nconst id=parentElement.dataset.id\r\nconst todo=data.find((todo)=>todo.id==id)\r\n\r\n\r\ncurrentEditId=id\r\n\r\ndocument.querySelector('#edit-title').value=todo.title\r\ndocument.querySelector('#edit-discription').value=todo.discription\r\ndocument.querySelector('#edit-column').value=todo.column\r\ndocument.querySelector('.select__user-edit').value=todo.user\r\nconst modal = new bootstrap.Modal(document.getElementById('editModal'))\r\nmodal.show()\r\n}\r\n\r\n\r\nfunction handleSaveEditedCard() {\r\n    const title=document.querySelector('#edit-title').value\r\n    const discription=document.querySelector('#edit-discription').value\r\n    const column=document.querySelector('#edit-column').value\r\n    const userId=document.querySelector('.select__user-edit').value\r\n    const index=data.findIndex((todo)=>todo.id==currentEditId)\r\n\r\n    if (index === -1) {\r\n        alert('Ошибка: задача не найдена!')\r\n        return\r\n    }\r\n\r\n    data[index].title=title\r\n    data[index].discription=discription\r\n    data[index].column=column\r\n    data[index].user=userId\r\n\r\n    setDataToLocalStorage(data)\r\n    render(data)\r\n    currentEditId=null\r\n}\r\n\r\nfunction buildTemplate({id,title,discription,createdAt,user}) {\r\n    const date=new Date(createdAt)\r\n    const userObj=usersList.find(u=>u.id==user)\r\n    const userName=userObj?userObj.name:'unknown user'\r\n\r\n    return `\r\n        <div  data-id=\"${id}\" class=\"card m-2 w-90\" style=\"max-width:400px;\">\r\n        <button data-role=\"remove\" class=\"btn btn-close\"></button>\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\">${title}</h5>\r\n                <p class=\"card-text\">${discription}</p>\r\n                <p class=\"card-text\">${userName}</p>\r\n                <div class=\"card__time d-flex\">\r\n                    <div class=\"card__time-day d-flex p-2\">\r\n                        <div class=\"card-createdAt\">${date.getFullYear()}</div>\r\n                        <div class=\"card-createdAt\">.</div>\r\n                        <div class=\"card-createdAt\">${ date.getMonth()}</div>\r\n                        <div class=\"card-createdAt\">.</div>\r\n                        <div class=\"card-createdAt\">${date.getDay()}</div>\r\n                    </div>\r\n                    <div class=\"card__time-hours d-flex p-2\">\r\n                        <div class=\"card-createdAt\">${ date.getHours().toString().padStart(2,'0')}</div>\r\n                        <div class=\"card-createdAt\">:</div>\r\n                        <div class=\"card-createdAt\">${date.getMinutes().toString().padStart(2,'0')}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        <button data-role=\"edit\" class=\"btn btn-warning\">edit</button>\r\n        </div>\r\n    `\r\n}\r\n\r\nfunction currentTime() {\r\n    const time=new Date()\r\n    let hours=time.getHours().toString().padStart(2,'0')\r\n    let minutes=time.getMinutes().toString().padStart(2,'0')\r\n    hoursTimeElement.textContent=`${hours}`\r\n    minutesTimeElement.textContent=`${minutes}`\r\n}\r\nsetInterval(currentTime,100)\r\n\r\nfunction render(data) {\r\n\r\n    document.querySelector('.trello__todo-container').innerHTML=''\r\n    document.querySelector('.trello__inprogress-container').innerHTML=''\r\n    document.querySelector('.trello__done-container').innerHTML=''\r\n\r\n    data.forEach((todo)=>{\r\n        let containerSelector=''\r\n        if (todo.column==='todo') {\r\n            containerSelector='.trello__todo-container'\r\n        }\r\n        else if (todo.column==='in-progress') {\r\n            containerSelector='.trello__inprogress-container'\r\n        }\r\n        else if (todo.column==='done') {\r\n            containerSelector='.trello__done-container'\r\n        }\r\n        const container=document.querySelector(containerSelector)\r\n        const template=buildTemplate(todo)\r\n        container.insertAdjacentHTML('beforeend',template)\r\n    })\r\n    updateCounter()\r\n}\r\n","export function setDataToLocalStorage(data) {\r\n    localStorage.setItem('todoItem', JSON.stringify(data))\r\n}\r\n\r\nexport function getDataFromLocalStorage() {\r\n    const data=localStorage.getItem('todoItem')\r\n    if (data) {\r\n        const dataFromStorage=JSON.parse(data)\r\n        return dataFromStorage.map((todo)=>{\r\n            return todo\r\n        })\r\n    }else{\r\n        return[]\r\n    }\r\n}"],"names":["$f3e1fb6edc6593d2$export$2acc14246b6aac9e","data","localStorage","setItem","JSON","stringify","$388b617130f03bd4$var$saveTodoButtonElement","document","querySelector","$388b617130f03bd4$var$titleTodoElement","$388b617130f03bd4$var$discriptionTodoElement","$388b617130f03bd4$var$columnElement","$388b617130f03bd4$var$trelloCardsElement","$388b617130f03bd4$var$editSaveTodoButton","$388b617130f03bd4$var$handleDeleteAllCardButton","$388b617130f03bd4$var$todoCounterElement","$388b617130f03bd4$var$inprogressCounterElement","$388b617130f03bd4$var$doneCounterElement","$388b617130f03bd4$var$hoursTimeElement","$388b617130f03bd4$var$minutesTimeElement","$388b617130f03bd4$var$selectUserElement","$388b617130f03bd4$var$selectUserEditElement","$388b617130f03bd4$var$usersList","$388b617130f03bd4$var$data","getItem","dataFromStorage","parse","map","todo","$388b617130f03bd4$var$render","$388b617130f03bd4$var$currentEditId","addEventListener","id","Date","now","column","value","title","newTodo","$388b617130f03bd4$var$Todo","inProgressTask","filter","length","alert","push","target","role","dataset","rootElement","closest","index","findIndex","splice","parentElement","find","discription","user","modal","bootstrap","Modal","getElementById","show","userId","confirm","notDoneItems","forEach","constructor","createdAt","todoCount","inprogressCount","doneCount","innerHTML","containerSelector","container","template","$388b617130f03bd4$var$buildTemplate","date","userObj","u","userName","name","getFullYear","getMonth","getDay","getHours","toString","padStart","getMinutes","insertAdjacentHTML","textContent","fetch","then","response","json","users","html","$388b617130f03bd4$var$buildTemplateUsers","setInterval","time","hours","minutes"],"version":3,"file":"todo-app.a527d271.js.map"}